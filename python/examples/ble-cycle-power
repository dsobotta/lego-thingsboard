#!/usr/bin/python

import asyncio
import sys

from bleak import BleakScanner
from bleak.backends.device import BLEDevice
from bleak.backends.scanner import AdvertisementData

from ccmqtt import circuitcube

detected_devices: BLEDevice = []
cc_clients: circuitcube.BLEClient = []

def device_found(device: BLEDevice, ad_data: AdvertisementData):
    if device and device.name and circuitcube.DEVICE_FILTER in device.name:
        detected_devices.append(device)

async def main():

    print("Scanning for Tenka CircuitCube BLE devices...")    
    await BleakScanner.find_device_by_filter(device_found, 2)
    print("Scan Complete.")

    print("Found {} Tenka Circuit Cubes.".format(len(detected_devices)))
    for device in detected_devices:
        client = circuitcube.BLEClient(device)
        cc_clients.append(client)
        await client.connect()
        print("Connected to {}".format(client.name))

    print("Running Main Loop...")
    while len(cc_clients) > 0:
        for client in cc_clients:
            batt_level = await client.get_battery()
            print("{} batt level: {}%".format(client.name, batt_level))

        for client in cc_clients:
            await client.set_power(0, "a")
            await client.set_power(0, "b")
            await client.set_power(0, "c")
        await asyncio.sleep(1)

        for client in cc_clients:
            await client.set_power(50, "a")
            await client.set_power(150, "b")
            await client.set_power(250, "c")
        await asyncio.sleep(1)

asyncio.run(main())
